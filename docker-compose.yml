
services:
    nginx:
        image: nginx:stable-alpine
        restart: unless-stopped
        ports:
            - '${NGINX_PORT:-8000}:80'
        volumes:
            - '.:/var/www/html'
            - './docker/nginx/default.conf:/etc/nginx/conf.d/default.conf'
            - './docker/nginx/logs:/var/log/nginx'
        depends_on:
            - php

    php:
        build:
            context: ./docker/php
            args:
                - USER_ID=${USER_ID:-1000}
                - GROUP_ID=${GROUP_ID:-1000}
        restart: unless-stopped
        environment:
            DATABASE_URL: "mysql://${MYSQL_USER:-user}:${MYSQL_PASSWORD:-pass}@${MYSQL_HOST:-mysql}:${MYSQL_PORT:-3306}/${MYSQL_DATABASE:-app}?serverVersion=${MYSQL_VERSION:-8.4.4}&charset=utf8mb4"
        volumes:
            - '.:/var/www/html'
            - './docker/php/php.ini:/usr/local/etc/php/php.ini'
        depends_on:
            - mysql

    mysql:
        image: mysql:8.4.4
        restart: unless-stopped
        ports:
            - '${MYSQL_PORT:-3306}:3306'
        volumes:
            - './docker/mysql:/var/lib/mysql'
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
            MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
            MYSQL_USER: ${MYSQL_USER:-bot}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD:-bot}
        healthcheck:
            test: ['CMD', 'mysqladmin', 'ping', '-uroot', '-proot']
            interval: 5s
            timeout: 5s
            retries: 30

